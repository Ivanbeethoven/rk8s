# @generated by `cargo buckal`

load("@prelude//rust:cargo_buildscript.bzl", "buildscript_run")
load("@prelude//rust:cargo_package.bzl", "cargo")

http_archive(
    name = "libz-rs-sys-vendor",
    urls = ["https://static.crates.io/crates/libz-rs-sys/libz-rs-sys-0.5.1.crate"],
    sha256 = "172a788537a2221661b480fee8dc5f96c580eb34fa88764d3205dc356c7e4221",
    type = "tar.gz",
    strip_prefix = "libz-rs-sys-0.5.1",
    out = "vendor",
)

cargo.rust_library(
    name = "libz-rs-sys",
    srcs = [":libz-rs-sys-vendor"],
    crate = "libz_rs_sys",
    crate_root = "vendor/src/lib.rs",
    edition = "2021",
    env = {
        "CARGO_CRATE_NAME": "libz-rs-sys",
        "CARGO_MANIFEST_DIR": "vendor",
        "CARGO_PKG_AUTHORS": "",
        "CARGO_PKG_DESCRIPTION": "A memory-safe zlib implementation written in rust",
        "CARGO_PKG_NAME": "libz-rs-sys",
        "CARGO_PKG_REPOSITORY": "https://github.com/trifectatechfoundation/zlib-rs",
        "CARGO_PKG_VERSION": "0.5.1",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "5",
        "CARGO_PKG_VERSION_PATCH": "1",
        "CARGO_PKG_VERSION_PRE": "",
    },
    features = [
        "rust-allocator",
        "std",
    ],
    visibility = ["PUBLIC"],
    deps = ["//third-party/rust/crates/zlib-rs/0.5.1:zlib-rs"],
)
