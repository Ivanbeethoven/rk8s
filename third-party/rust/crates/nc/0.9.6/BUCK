# @generated by `cargo buckal`

load("@buckal//:cargo_manifest.bzl", "cargo_manifest")
load("@buckal//:wrapper.bzl", "buildscript_run", "rust_binary", "rust_library")

http_archive(
    name = "nc-vendor",
    urls = ["https://static.crates.io/crates/nc/nc-0.9.6.crate"],
    sha256 = "56c6d92d33b290df8a962fbf778711d529b11c92dc060cd675f1ce45a9a50977",
    type = "tar.gz",
    strip_prefix = "nc-0.9.6",
    out = "vendor",
)

cargo_manifest(
    name = "nc-manifest",
    vendor = ":nc-vendor",
)

rust_library(
    name = "nc",
    srcs = [":nc-vendor"],
    crate = "nc",
    crate_root = "vendor/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :nc-build-script-run[out_dir])",
    },
    features = [
        "default",
        "std",
    ],
    rustc_flags = [
        "@$(location :nc-build-script-run[rustc_flags])",
        "@$(location :nc-manifest[env_flags])",
    ],
    visibility = ["PUBLIC"],
)

rust_binary(
    name = "nc-build-script-build",
    srcs = [":nc-vendor"],
    crate = "build_script_build",
    crate_root = "vendor/build.rs",
    edition = "2021",
    features = [
        "default",
        "std",
    ],
    rustc_flags = ["@$(location :nc-manifest[env_flags])"],
    visibility = [],
    deps = ["//third-party/rust/crates/cc/1.2.41:cc"],
)

buildscript_run(
    name = "nc-build-script-run",
    package_name = "nc",
    buildscript_rule = ":nc-build-script-build",
    env_srcs = [":nc-manifest[env_dict]"],
    features = [
        "default",
        "std",
    ],
    version = "0.9.6",
    manifest_dir = ":nc-vendor",
    visibility = ["PUBLIC"],
)
