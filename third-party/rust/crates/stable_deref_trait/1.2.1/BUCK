# @generated by `cargo buckal`

load("@prelude//rust:cargo_buildscript.bzl", "buildscript_run")
load("@prelude//rust:cargo_package.bzl", "cargo")

http_archive(
    name = "stable_deref_trait-vendor",
    urls = ["https://static.crates.io/crates/stable_deref_trait/stable_deref_trait-1.2.1.crate"],
    sha256 = "6ce2be8dc25455e1f91df71bfa12ad37d7af1092ae736f3a6cd0e37bc7810596",
    type = "tar.gz",
    strip_prefix = "stable_deref_trait-1.2.1",
    out = "vendor",
)

cargo.rust_library(
    name = "stable_deref_trait",
    srcs = [":stable_deref_trait-vendor"],
    crate = "stable_deref_trait",
    crate_root = "vendor/src/lib.rs",
    edition = "2015",
    env = {
        "CARGO_CRATE_NAME": "stable_deref_trait",
        "CARGO_MANIFEST_DIR": "vendor",
        "CARGO_PKG_AUTHORS": "Robert Grosse <n210241048576@gmail.com>",
        "CARGO_PKG_DESCRIPTION": "An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental.\n",
        "CARGO_PKG_NAME": "stable_deref_trait",
        "CARGO_PKG_REPOSITORY": "https://github.com/storyyeller/stable_deref_trait",
        "CARGO_PKG_VERSION": "1.2.1",
        "CARGO_PKG_VERSION_MAJOR": "1",
        "CARGO_PKG_VERSION_MINOR": "2",
        "CARGO_PKG_VERSION_PATCH": "1",
        "CARGO_PKG_VERSION_PRE": "",
    },
    features = ["alloc"],
    visibility = ["PUBLIC"],
)
