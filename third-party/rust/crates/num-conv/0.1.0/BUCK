# @generated by `cargo buckal`

load("@prelude//rust:cargo_buildscript.bzl", "buildscript_run")
load("@prelude//rust:cargo_package.bzl", "cargo")

http_archive(
    name = "num-conv-vendor",
    urls = ["https://static.crates.io/crates/num-conv/num-conv-0.1.0.crate"],
    sha256 = "51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9",
    type = "tar.gz",
    strip_prefix = "num-conv-0.1.0",
    out = "vendor",
)

cargo.rust_library(
    name = "num-conv",
    srcs = [":num-conv-vendor"],
    crate = "num_conv",
    crate_root = "vendor/src/lib.rs",
    edition = "2021",
    env = {
        "CARGO_CRATE_NAME": "num-conv",
        "CARGO_MANIFEST_DIR": "vendor",
        "CARGO_PKG_AUTHORS": "Jacob Pratt <jacob@jhpratt.dev>",
        "CARGO_PKG_DESCRIPTION": "`num_conv` is a crate to convert between integer types without using `as` casts. This provides\nbetter certainty when refactoring, makes the exact behavior of code more explicit, and allows using\nturbofish syntax.\n",
        "CARGO_PKG_NAME": "num-conv",
        "CARGO_PKG_REPOSITORY": "https://github.com/jhpratt/num-conv",
        "CARGO_PKG_VERSION": "0.1.0",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "1",
        "CARGO_PKG_VERSION_PATCH": "0",
        "CARGO_PKG_VERSION_PRE": "",
    },
    visibility = ["PUBLIC"],
)
