# @generated by `cargo buckal`

load("@buckal//:cargo_manifest.bzl", "cargo_manifest")
load("@buckal//:wrapper.bzl", "buildscript_run", "rust_binary", "rust_library")

http_archive(
    name = "context-vendor",
    urls = ["https://static.crates.io/crates/context/context-3.0.0.crate"],
    sha256 = "0adf149597f6e75ab7c41ec360dd1a74c86667cf0ef09bd3c207d508665f60e8",
    type = "tar.gz",
    strip_prefix = "context-3.0.0",
    out = "vendor",
)

cargo_manifest(
    name = "context-manifest",
    vendor = ":context-vendor",
)

rust_library(
    name = "context",
    srcs = [":context-vendor"],
    crate = "context",
    crate_root = "vendor/src/lib.rs",
    edition = "2015",
    env = {
        "OUT_DIR": "$(location :context-build-script-run[out_dir])",
    },
    rustc_flags = [
        "@$(location :context-build-script-run[rustc_flags])",
        "@$(location :context-manifest[env_flags])",
    ],
    visibility = ["PUBLIC"],
    deps = ["//third-party/rust/crates/libc/0.2.177:libc"],
)

rust_binary(
    name = "context-build-script-build",
    srcs = [":context-vendor"],
    crate = "build_script_build",
    crate_root = "vendor/build.rs",
    edition = "2015",
    rustc_flags = ["@$(location :context-manifest[env_flags])"],
    visibility = [],
    deps = ["//third-party/rust/crates/cc/1.2.41:cc"],
)

buildscript_run(
    name = "context-build-script-run",
    package_name = "context",
    buildscript_rule = ":context-build-script-build",
    env_srcs = [":context-manifest[env_dict]"],
    version = "3.0.0",
    manifest_dir = ":context-vendor",
    visibility = ["PUBLIC"],
)
