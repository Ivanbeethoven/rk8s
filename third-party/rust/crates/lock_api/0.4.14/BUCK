# @generated by `cargo buckal`

load("@prelude//rust:cargo_buildscript.bzl", "buildscript_run")
load("@prelude//rust:cargo_package.bzl", "cargo")

http_archive(
    name = "lock_api-vendor",
    urls = ["https://static.crates.io/crates/lock_api/lock_api-0.4.14.crate"],
    sha256 = "224399e74b87b5f3557511d98dff8b14089b3dadafcab6bb93eab67d3aace965",
    type = "tar.gz",
    strip_prefix = "lock_api-0.4.14",
    out = "vendor",
)

cargo.rust_library(
    name = "lock_api",
    srcs = [":lock_api-vendor"],
    crate = "lock_api",
    crate_root = "vendor/src/lib.rs",
    edition = "2021",
    env = {
        "CARGO_CRATE_NAME": "lock_api",
        "CARGO_MANIFEST_DIR": "vendor",
        "CARGO_PKG_AUTHORS": "Amanieu d'Antras <amanieu@gmail.com>",
        "CARGO_PKG_DESCRIPTION": "Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.",
        "CARGO_PKG_NAME": "lock_api",
        "CARGO_PKG_REPOSITORY": "https://github.com/Amanieu/parking_lot",
        "CARGO_PKG_VERSION": "0.4.14",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "4",
        "CARGO_PKG_VERSION_PATCH": "14",
        "CARGO_PKG_VERSION_PRE": "",
    },
    features = [
        "atomic_usize",
        "default",
    ],
    visibility = ["PUBLIC"],
    deps = ["//third-party/rust/crates/scopeguard/1.2.0:scopeguard"],
)
